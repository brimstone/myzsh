################################################################################
# Title    : longcmd
#
# Desc     : Run commands after a program finishs, if that program takes
#            a long time
#
# Options  : LONGCMD_IGNORE   - array of programs to ignore (sleep vim ssh)
#            LONGCMD_TIME     - time before a program is considered long (30)
#
# Defaults : LONGCMD_IGNORE=(sleep vim ssh)
#            LONGCMD_TIME=30
#
################################################################################
longcmd_before () {
	local f
	# get our cmd
	LONGCMD_CMD="$1"
	[ -n "${LONGCMD_CMD#*\#}" ] && LONGCMD_CMD="${LONGCMD_CMD#*\#}"
	# figure out just our actual command
	LONGCMD_SHORT=$(sed -e 's/ .*$//' <<< $LONGCMD_CMD)
	# if we don't have a list of cmds to ignore, set one
	[ -z "$LONGCMD_IGNORE" ] && LONGCMD_IGNORE=(sleep vim ssh)
	# loop loop loop
	for f in $LONGCMD_IGNORE; do
		# if we have a match, bail
		[ "$LONGCMD_SHORT" = "$f" ] && return
	done
	# we don't match, set our start time
	LONGCMD_START=${(%):-%D\{%s\}}
}

longcmd_after () {
	# If we don't have a start time, bail
	[ -z "$LONGCMD_START" ] && return

	# Figure out how long It took to run
	local LONGCMD_END=${(%):-%D\{%s\}}
	LONGCMD_SECS=$[ $LONGCMD_END - $LONGCMD_START ]
	# unset our flag variable
	unset LONGCMD_START

	# If our delta is not very long, bail
	[ $LONGCMD_SECS -lt ${LONGCMD_TIME:-30} ] && unset LONGCMD_SECS && return

	LONGCMD_SECS=$(TZ=GMT date -d@$LONGCMD_SECS +%H:%M:%S)
	LONGCMD_SECS=${LONGCMD_SECS##00:}
	# Let the user know how long it took
	echo "$LONGCMD_CMD: $LONGCMD_SECS"
}

# Let the user put comments in interactive commands
setopt interactivecomments
precmd_funcs+=(longcmd_after)
preexec_funcs+=(longcmd_before)
